@using StarEvents.Models
@{
    ViewData["Title"] = "Admin Dashboard";
}

<style>
    .admin-dashboard {
        padding: 40px 0;
    }

    .dashboard-header {
        background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
        color: white;
        padding: 40px;
        border-radius: 15px;
        margin-bottom: 40px;
        box-shadow: 0 10px 30px rgba(220, 53, 69, 0.2);
    }

        .dashboard-header h1 {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 10px;
        }

        .dashboard-header p {
            font-size: 1.1rem;
            opacity: 0.95;
        }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 25px;
        margin-bottom: 40px;
    }

    .stat-card {
        background: white;
        border-radius: 15px;
        padding: 30px;
        box-shadow: 0 5px 20px rgba(0,0,0,0.08);
        transition: all 0.3s ease;
        border-left: 5px solid;
    }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(0,0,0,0.15);
        }

        .stat-card.users {
            border-color: #007bff;
        }

        .stat-card.events {
            border-color: #28a745;
        }

        .stat-card.bookings {
            border-color: #ffc107;
        }

        .stat-card.revenue {
            border-color: #dc3545;
        }

    .stat-icon {
        font-size: 3rem;
        margin-bottom: 15px;
    }

    .stat-value {
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 5px;
    }

    .stat-card.users .stat-value {
        color: #007bff;
    }

    .stat-card.events .stat-value {
        color: #28a745;
    }

    .stat-card.bookings .stat-value {
        color: #ffc107;
    }

    .stat-card.revenue .stat-value {
        color: #dc3545;
    }

    .stat-label {
        font-size: 1rem;
        color: #666;
        font-weight: 600;
    }

    .stat-change {
        font-size: 0.85rem;
        margin-top: 10px;
        padding-top: 10px;
        border-top: 1px solid #f0f0f0;
    }

        .stat-change.positive {
            color: #28a745;
        }

        .stat-change.negative {
            color: #dc3545;
        }

    .quick-actions {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-bottom: 40px;
    }

    .action-card {
        background: white;
        border-radius: 12px;
        padding: 25px;
        text-align: center;
        box-shadow: 0 5px 15px rgba(0,0,0,0.08);
        transition: all 0.3s ease;
        text-decoration: none;
        display: block;
    }

        .action-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }

    .action-icon {
        font-size: 2.5rem;
        margin-bottom: 15px;
    }

    .action-title {
        font-size: 1.1rem;
        font-weight: 700;
        color: #333;
        margin-bottom: 5px;
    }

    .action-desc {
        font-size: 0.85rem;
        color: #666;
    }

    .section-title {
        font-size: 1.8rem;
        font-weight: 700;
        color: #333;
        margin-bottom: 25px;
        display: flex;
        align-items: center;
        gap: 10px;
    }

        .section-title::before {
            content: '';
            width: 5px;
            height: 30px;
            background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
            border-radius: 3px;
        }

    .content-grid {
        display: grid;
        grid-template-columns: 2fr 1fr;
        gap: 30px;
        margin-bottom: 40px;
    }

    .recent-activity {
        background: white;
        border-radius: 15px;
        padding: 30px;
        box-shadow: 0 5px 20px rgba(0,0,0,0.08);
    }

    .activity-item {
        padding: 15px;
        border-left: 3px solid #007bff;
        background: #f8f9fa;
        border-radius: 8px;
        margin-bottom: 15px;
    }

        .activity-item:last-child {
            margin-bottom: 0;
        }

    .activity-title {
        font-weight: 600;
        color: #333;
        margin-bottom: 5px;
    }

    .activity-time {
        font-size: 0.85rem;
        color: #999;
    }

    .system-alerts {
        background: white;
        border-radius: 15px;
        padding: 30px;
        box-shadow: 0 5px 20px rgba(0,0,0,0.08);
    }

    .alert-item {
        padding: 15px;
        border-radius: 8px;
        margin-bottom: 15px;
    }

        .alert-item.warning {
            background: #fff3cd;
            border-left: 3px solid #ffc107;
        }

        .alert-item.danger {
            background: #f8d7da;
            border-left: 3px solid #dc3545;
        }

        .alert-item.info {
            background: #d1ecf1;
            border-left: 3px solid #17a2b8;
        }

    .chart-container {
        background: white;
        border-radius: 15px;
        padding: 30px;
        box-shadow: 0 5px 20px rgba(0,0,0,0.08);
        margin-bottom: 40px;
    }

    @@media (max-width: 968px) {
        .content-grid {
            grid-template-columns: 1fr;
        }
    }
</style>

<div class="admin-dashboard">
    <div class="container">
        <div class="dashboard-header">
            <h1>🛡️ Admin Dashboard</h1>
            <p>System Overview and Management Center</p>
        </div>

        <div class="stats-grid">
            <div class="stat-card users">
                <div class="stat-icon">👥</div>
                <div class="stat-value">@ViewBag.TotalUsers</div>
                <div class="stat-label">Total Users</div>
                <div class="stat-change positive">↑ @ViewBag.NewUsersThisMonth new this month</div>
            </div>
            <div class="stat-card events">
                <div class="stat-icon">🎫</div>
                <div class="stat-value">@ViewBag.TotalEvents</div>
                <div class="stat-label">Total Events</div>
                <div class="stat-change positive">↑ @ViewBag.ActiveEvents active now</div>
            </div>
            <div class="stat-card bookings">
                <div class="stat-icon">📋</div>
                <div class="stat-value">@ViewBag.TotalBookings</div>
                <div class="stat-label">Total Bookings</div>
                <div class="stat-change positive">↑ @ViewBag.BookingsThisMonth this month</div>
            </div>
            <div class="stat-card revenue">
                <div class="stat-icon">💰</div>
                <div class="stat-value">LKR @ViewBag.TotalRevenue</div>
                <div class="stat-label">Total Revenue</div>

                @{
                    // Convert the ViewBag value to a decimal for comparison
                    decimal revenueGrowth = Convert.ToDecimal(ViewBag.RevenueGrowth);
                }

                @if (revenueGrowth >= 0)
                {
                    <div class="stat-change positive">↑ @revenueGrowth% this month</div>
                }
                else
                {
                    <div class="stat-change negative">↓ @(revenueGrowth * -1)% this month</div>
                }
            </div>
        </div>

        <h2 class="section-title">⚡ Quick Actions</h2>
        <div class="quick-actions">
            <a href="@Url.Action("ManageUsers", "Admin")" class="action-card">
                <div class="action-icon">👥</div>
                <div class="action-title">Manage Users</div>
                <div class="action-desc">View and edit user accounts</div>
            </a>
            <a href="@Url.Action("ManageEvents", "Admin")" class="action-card">
                <div class="action-icon">🎫</div>
                <div class="action-title">Manage Events</div>
                <div class="action-desc">Control all events</div>
            </a>
            <a href="@Url.Action("ManageBookings", "Admin")" class="action-card">
                <div class="action-icon">📋</div>
                <div class="action-title">View Bookings</div>
                <div class="action-desc">All booking records</div>
            </a>
            <a href="@Url.Action("Reports", "Admin")" class="action-card">
                <div class="action-icon">📊</div>
                <div class="action-title">Generate Reports</div>
                <div class="action-desc">Sales and analytics</div>
            </a>
            <a href="@Url.Action("SystemSettings", "Admin")" class="action-card">
                <div class="action-icon">⚙️</div>
                <div class="action-title">System Settings</div>
                <div class="action-desc">Configure system</div>
            </a>
        </div>

        <div class="content-grid">
            <div class="recent-activity">
                <h3 class="section-title" style="font-size: 1.3rem;">📌 Recent Activity</h3>
                @{
                    var activities = ViewBag.RecentActivities as List<DashboardActivityViewModel>;
                }
                @if (activities != null && activities.Any())
                {
                    foreach (var activity in activities)
                    {
                        <div class="activity-item">
                            <div class="activity-title">@activity.Description</div>
                            <div class="activity-time">@activity.Timestamp.ToString("MMM dd, yyyy hh:mm tt")</div>
                        </div>
                    }
                }
                else
                {
                    <div class="activity-item">
                        <div class="activity-title">No recent activity found.</div>
                    </div>
                }
            </div>

            <div class="system-alerts">
                <h3 class="section-title" style="font-size: 1.3rem;">⚠️ System Alerts</h3>

                @if (ViewBag.LowStockEventsCount > 0)
                {
                    <div class="alert-item warning">
                        <strong>⚠️ Low Tickets</strong>
                        <p style="margin: 5px 0 0 0; font-size: 0.9rem;">
                            @ViewBag.LowStockEventsCount events have less than 10 tickets remaining.
                        </p>
                    </div>
                }

                @if (ViewBag.PendingApprovals > 0)
                {
                    <div class="alert-item info">
                        <strong>ℹ️ Pending Approvals</strong>
                        <p style="margin: 5px 0 0 0; font-size: 0.9rem;">
                            @ViewBag.PendingApprovals events pending approval.
                        </p>
                    </div>
                }

                <div class="alert-item danger">
                    <strong>🔴 System Backup</strong>
                    <p style="margin: 5px 0 0 0; font-size: 0.9rem;">Last backup: @ViewBag.LastBackupDays days ago</p>
                </div>
            </div>
        </div> <div class="chart-container">
            <h3 class="section-title">📈 Revenue Overview</h3>
            <canvas id="revenueChart" style="max-height: 400px;"></canvas>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Use Html.Raw to inject the JSON data from the controller directly into JavaScript
        const chartLabels = @Html.Raw(ViewBag.ChartLabels);
        const chartData = @Html.Raw(ViewBag.ChartData);

        const ctx = document.getElementById('revenueChart').getContext('2d');
        const revenueChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: chartLabels, // <-- DYNAMIC DATA
                datasets: [{
                    label: 'Revenue (LKR)',
                    data: chartData,  // <-- DYNAMIC DATA
                    borderColor: '#dc3545',
                    backgroundColor: 'rgba(220, 53, 69, 0.1)',
                    tension: 0.4,
                    fill: true
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false, // Set to false to allow the chart to fill the container's height
                plugins: {
                    legend: {
                        display: true,
                        position: 'top'
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) {
                                return 'LKR ' + value.toLocaleString();
                            }
                        }
                    }
                }
            }
        });
    </script>
}