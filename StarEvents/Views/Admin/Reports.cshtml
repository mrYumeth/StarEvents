@{
    ViewData["Title"] = "System Reports";
}

<style>
    .reports-container {
        padding: 40px 0;
        background: #f8f9fa;
    }

    .page-header {
        text-align: center;
        margin-bottom: 40px;
    }

        .page-header h1 {
            font-size: 2.5rem;
            font-weight: 700;
            color: #343a40;
        }

    .export-buttons {
        text-align: center;
        margin-bottom: 40px;
        display: flex;
        justify-content: center;
        gap: 15px;
        flex-wrap: wrap;
    }

    .btn-export {
        padding: 10px 25px;
        border: none;
        border-radius: 25px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        background: white;
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    }

    .btn-print {
        color: #007bff;
        border: 2px solid #007bff;
    }

        .btn-print:hover {
            background: #007bff;
            color: white;
        }

    .btn-pdf {
        color: #dc3545;
        border: 2px solid #dc3545;
    }

        .btn-pdf:hover {
            background: #dc3545;
            color: white;
        }

    .btn-excel {
        color: #28a745;
        border: 2px solid #28a745;
    }

        .btn-excel:hover {
            background: #28a745;
            color: white;
        }

    .summary-cards {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
        gap: 25px;
        margin-bottom: 50px;
    }

    .summary-card {
        background: white;
        padding: 25px;
        border-radius: 15px;
        text-align: center;
        box-shadow: 0 5px 20px rgba(0,0,0,0.08);
        border-left: 5px solid;
    }

    .summary-icon {
        font-size: 2.5rem;
        margin-bottom: 15px;
    }

    .summary-value {
        font-size: 2.2rem;
        font-weight: 700;
    }

    .summary-label {
        color: #6c757d;
        font-weight: 500;
    }

    .sales {
        border-color: #28a745;
    }

        .sales .summary-value {
            color: #28a745;
        }

    .tickets {
        border-color: #17a2b8;
    }

        .tickets .summary-value {
            color: #17a2b8;
        }

    .average {
        border-color: #ffc107;
    }

        .average .summary-value {
            color: #ffc107;
        }

    .customers {
        border-color: #007bff;
    }

        .customers .summary-value {
            color: #007bff;
        }

    .report-section {
        background: white;
        padding: 30px;
        border-radius: 15px;
        box-shadow: 0 5px 20px rgba(0,0,0,0.08);
        margin-bottom: 40px;
    }

    .section-title {
        font-size: 1.5rem;
        font-weight: 700;
        color: #343a40;
        margin-bottom: 25px;
    }

    .chart-container {
        position: relative;
        height: 350px;
    }



    .top-events-table {
        width: 100%;
        border-collapse: collapse;
    }

        .top-events-table th, .top-events-table td {
            padding: 15px;
            text-align: left;
            border-bottom: 1px solid #dee2e6;
        }

        .top-events-table thead th {
            background: #f8f9fa;
            font-weight: 700;
        }
</style>

<div class="reports-container" id="reportContent">
    <div class="container">
        <!-- Header -->
        <div class="page-header">
            <h1>📊 System Reports & Analytics</h1>
            <p style="margin: 0; opacity: 0.9;">Comprehensive overview of sales, users, and events</p>
        </div>

        <!-- Export Buttons (Excluded from PDF export) -->
        <div class="export-buttons" id="exportButtons">
            <button onclick="window.print()" class="btn-export btn-print">🖨️ Print Report</button>
            <button onclick="exportToPDF()" class="btn-export btn-pdf">📄 Export PDF</button>
            <button onclick="exportToExcel()" class="btn-export btn-excel">📊 Export Excel</button>
        </div>

        <!-- Summary Cards -->
        <div class="summary-cards">
            <div class="summary-card sales">
                <div class="summary-icon">💰</div>
                <div class="summary-value">LKR @ViewBag.TotalSales</div>
                <div class="summary-label">Total Sales Revenue</div>
            </div>
            <div class="summary-card tickets">
                <div class="summary-icon">🎫</div>
                <div class="summary-value">@ViewBag.TotalTicketsSold</div>
                <div class="summary-label">Total Tickets Sold</div>
            </div>
            <div class="summary-card average">
                <div class="summary-icon">📈</div>
                <div class="summary-value">LKR @ViewBag.AverageBookingValue</div>
                <div class="summary-label">Average Booking Value</div>
            </div>
            <div class="summary-card customers">
                <div class="summary-icon">👥</div>
                <div class="summary-value">@ViewBag.TotalCustomers</div>
                <div class="summary-label">Active Customers</div>
            </div>
        </div>

        <!-- Monthly Revenue Chart -->
        <div class="report-section">
            <h3 class="section-title">📈 Monthly Revenue Trend</h3>
            <div class="chart-container">
                <canvas id="revenueChart"></canvas>
            </div>
        </div>

        <!-- Top Performing Events -->
        <div class="report-section">
            <h3 class="section-title">🏆 Top Performing Events</h3>
            @if (ViewBag.TopEvents != null && ((IEnumerable<dynamic>)ViewBag.TopEvents).Any())
            {
                <table class="top-events-table" id="topEventsTable">
                    <thead>
                        <tr>
                            <th>Rank</th>
                            <th>Event Name</th>
                            <th>Tickets Sold</th>
                            <th>Total Revenue</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int rank = 1;
                        }
                        @foreach (var evt in ViewBag.TopEvents)
                        {
                            <tr>
                                <td><strong>#@rank</strong></td>
                                <td>@evt.EventName</td>
                                <td>@evt.TicketsSold tickets</td>
                                <td><strong>LKR @evt.TotalRevenue.ToString("N2")</strong></td>
                            </tr>
                            rank++;
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p style="text-align: center; color: #556; padding: 40px;">No event data available.</p>
            }
        </div>

        <!-- Sales by Category -->
        <div class="report-section">
            <h3 class="section-title">📊 Sales by Category</h3>
            <div class="chart-container">
                <canvas id="categoryChart"></canvas>
            </div>
        </div>

        <!-- Booking Status Distribution -->
        <div class="report-section">
            <h3 class="section-title">📋 Booking Status Distribution</h3>
            <div style="max-width: 500px; margin: 0 auto;">
                <canvas id="statusChart"></canvas>
            </div>
        </div>

        <!-- User Statistics -->
        <div class="report-section">
            <h3 class="section-title">👥 User Statistics</h3>
            <div class="summary-cards" style="grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));">
                <div class="summary-card" style="border-color: #007bff;">
                    <div class="summary-value" style="color: #007bff;">@ViewBag.TotalCustomers</div>
                    <div class="summary-label">Total Customers</div>
                </div>
                <div class="summary-card" style="border-color: #28a745;">
                    <div class="summary-value" style="color: #28a745;">@ViewBag.TotalOrganizers</div>
                    <div class="summary-label">Active Organizers</div>
                </div>
                <div class="summary-card" style="border-color: #ffc107;">
                    <div class="summary-value" style="color: #ffc107;">@(ViewBag.TotalCustomers + ViewBag.TotalOrganizers + 1)</div>
                    <div class="summary-label">Total Users</div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Chart.js library -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <!-- PDF & Excel Export Libraries -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>

    <script>
        // --- DATA FROM CONTROLLER ---
        const monthlyRevenueData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.MonthlyRevenue ?? new List<object>()));
        const salesByCategoryData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.SalesByCategory ?? new List<object>()));
        const statusDistributionData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.BookingStatusDistribution ?? new List<object>()));

        // --- FIX: Get date string from C# and store in a JS variable ---
        const reportDate = '@DateTime.Now.ToString("yyyy-MM-dd")';

        // --- CHART COLORS ---
        const chartColors = ['#dc3545', '#ffc107', '#28a745', '#007bff', '#17a2b8', '#6c757d'];

        // --- MONTHLY REVENUE CHART ---
        const revenueCtx = document.getElementById('revenueChart').getContext('2d');
        if (monthlyRevenueData.length > 0) {
            new Chart(revenueCtx, {
                type: 'line',
                data: {
                    labels: monthlyRevenueData.map(m => m.month),
                    datasets: [{
                        label: 'Revenue (LKR)',
                        data: monthlyRevenueData.map(m => m.revenue),
                        borderColor: '#28a745',
                        backgroundColor: 'rgba(40, 167, 69, 0.1)',
                        tension: 0.4,
                        fill: true
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: { y: { beginAtZero: true, ticks: { callback: value => 'LKR ' + value.toLocaleString() } } }
                }
            });
        }

        // --- SALES BY CATEGORY CHART ---
        const categoryCtx = document.getElementById('categoryChart').getContext('2d');
        if (salesByCategoryData.length > 0) {
            new Chart(categoryCtx, {
                type: 'bar',
                data: {
                    labels: salesByCategoryData.map(c => c.category),
                    datasets: [{
                        label: 'Sales by Category',
                        data: salesByCategoryData.map(c => c.sales),
                        backgroundColor: chartColors
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: { legend: { display: false } },
                    scales: { y: { beginAtZero: true, ticks: { callback: value => 'LKR ' + value.toLocaleString() } } }
                }
            });
        }

        // --- BOOKING STATUS DISTRIBUTION CHART ---
        const statusCtx = document.getElementById('statusChart').getContext('2d');
        if (statusDistributionData.length > 0) {
            new Chart(statusCtx, {
                type: 'doughnut',
                data: {
                    labels: statusDistributionData.map(s => s.status),
                    datasets: [{
                        data: statusDistributionData.map(s => s.count),
                        backgroundColor: chartColors
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: { legend: { position: 'bottom' } }
                }
            });
        }

        // --- EXPORT FUNCTIONS ---
        function exportToPDF() {
            const { jsPDF } = window.jspdf;
            const reportContent = document.getElementById('reportContent');
            const exportButtons = document.getElementById('exportButtons');

            // Temporarily hide buttons so they aren't in the PDF
            exportButtons.style.display = 'none';

            html2canvas(reportContent, { scale: 2 }).then(canvas => {
                const imgData = canvas.toDataURL('image/png');
                const pdf = new jsPDF('p', 'mm', 'a4');
                const pdfWidth = pdf.internal.pageSize.getWidth();
                const pdfHeight = pdf.internal.pageSize.getHeight();
                const canvasWidth = canvas.width;
                const canvasHeight = canvas.height;
                const ratio = canvasWidth / canvasHeight;
                const imgWidth = pdfWidth;
                const imgHeight = imgWidth / ratio;

                let heightLeft = imgHeight;
                let position = 0;

                pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);
                heightLeft -= pdfHeight;

                while (heightLeft > 0) {
                    position = heightLeft - imgHeight;
                    pdf.addPage();
                    pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);
                    heightLeft -= pdfHeight;
                }


                pdf.save(`StarEvents_Report_${reportDate}.pdf`);

                // Show buttons again
                exportButtons.style.display = 'flex';
            });
        }

        function exportToExcel() {
            const table = document.getElementById('topEventsTable');
            if (table) {
                const wb = XLSX.utils.table_to_book(table, { sheet: "Top Events" });

                XLSX.writeFile(wb, `StarEvents_Top_Events_${reportDate}.xlsx`);
            } else {
                alert('Top events table not found.');
            }
        }
    </script>
}

