@using Microsoft.AspNetCore.Identity
@using StarEvents.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="fas fa-user-circle"></i> Hello, @UserManager.GetUserAsync(User).Result?.FirstName
            </a>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">

                @if (User.IsInRole("Organizer"))
                {
                    <li><a class="dropdown-item" asp-controller="Organizers" asp-action="EditProfile">My Profile</a></li>
                }
                else if (User.IsInRole("Customer"))
                {
                    <li><a class="dropdown-item" asp-controller="Customer" asp-action="Profile">My Profile</a></li>
                }

                <li><hr class="dropdown-divider"></li>
                <li>
                    <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                        <button type="submit" class="dropdown-item">Logout</button>
                    </form>
                </li>
            </ul>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>